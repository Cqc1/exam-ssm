<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">    
    <!-- 指定要扫描的包的位置 -->
    <context:component-scan base-package="ssm"></context:component-scan>
    <!-- 告知Spring，我们启用注解驱动 -->
    <mvc:annotation-driven></mvc:annotation-driven>
     
    <!-- org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
          它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，
          就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，
          才由DispatcherServlet继续处理。 -->
    <!--  <mvc:default-servlet-handler/> -->
          
     <!--注解处理器映射器-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>     
    
    <!--注解的适配器-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>  
    <!-- 配置拦截器 -->
	<mvc:interceptors>
		 <!-- <mvc:interceptor> 
			拦截所有mvc控制器
			<mvc:mapping path="/**"/>
			mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
				LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选)
			<mvc:exclude-mapping path="/login" /> -->
			<bean class="ssm.interceptor.LoginInterceptor"></bean>			

		 <!-- </mvc:interceptor> --> 
	</mvc:interceptors>   
   
    <!-- 静态资源映射 -->
    <!-- 对静态资源文件的访问,因为Spring MVC会拦截所有请求,导致jsp页面中对js和CSS的引用也被拦截,配置后可以把对资源的请求交给项目的
    默认拦截器而不是Spring MVC-->
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/images/" mapping="/jpg/**"/>
    <mvc:resources location="/images/" mapping="/png/**"/>
    <mvc:resources location="/images/" mapping="/gif/**"/>
<!--     <mvc:resources location="/WEB-INF/behind/" mapping="/WEB-INF/behind/**"/>
    <mvc:resources location="/WEB-INF/student/" mapping="/WEB-INF/student/**"/>
    <mvc:resources location="/WEB-INF/teacher/" mapping="/WEB-INF/teacher/**"/> -->
    <mvc:default-servlet-handler/>
    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
</beans>