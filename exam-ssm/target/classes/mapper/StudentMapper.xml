<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="ssm.model.Student">
    <result column="StuId" jdbcType="INTEGER" property="stuid" />
    <result column="StuPwd" jdbcType="VARCHAR" property="stupwd" />
    <result column="StuName" jdbcType="VARCHAR" property="stuname" />
    <result column="StuSex" jdbcType="VARCHAR" property="stusex" />
    <result column="ClassId" jdbcType="INTEGER" property="classid" />
    <result column="StuMail" jdbcType="VARCHAR" property="stumail" />
    <result column="StuNum" jdbcType="INTEGER" property="stunum" />
  </resultMap>
   <!-- 自定义方法 -->
  <select id="getStudent" resultType="student">
      select * from student where StuId=#{stuid} and StuPwd=#{stupwd}
  </select>
  
  <select id="getById" resultMap="StudentResultMap">
      select * from student,class where student.ClassId=class.ClassId and StuId=#{stuid}
  </select>
  
  <select id="findAll" resultMap="StudentResultMap">
      select * from student,class where student.ClassId=class.ClassId
  </select>
  
  <select id="queryfind" resultMap="StudentResultMap">
      select * from student,class
      <where>
            <if test="#{query}!=null">
            ${type} like CONCAT('%',#{query},'%')
            </if>         
      </where>
      and student.ClassId=class.ClassId 
  </select>
  
  <delete id="deleteByid">
      delete from student where StuId=#{stuid}
  </delete>
  
  <update id="updateByid" parameterType="student">
      update student set StuId=#{stuid},StuPwd=#{stupwd},StuName=#{stuname},StuSex=#{stusex},ClassId=#{classid},StuMail=#{stumail},StuNum=#{stunum} where StuId=#{stuid} 
  </update>
  
  <update id="updateByPass" parameterType="student">
      update student set StuPwd=#{password} where StuId=#{stuid} 
  </update>
  
  <insert id="addUser" parameterType="student">
      insert into student values(#{stuid},#{stupwd},#{stuname},#{stusex},#{classid},#{stumail},#{stunum}) 
  </insert>
  
  <select id="getByClaid" resultMap="StudentResultMap">
      select * from student,class where student.ClassId=#{classid} and student.ClassId=class.ClassId
  </select>
  
  
	<insert id="insertInfoBatch" parameterType="java.util.List">
	
	    insert into student (StuId, StuPwd,StuName, StuSex, ClassId,StuMail, StuNum)
	
	    values
	
	    <foreach collection="list" item="item" index="index" separator=",">
	
	      (#{item.stuid}, #{item.stupwd}, #{item.stuname},#{item.stusex}, #{item.classid},
	
	      #{item.stumail}, #{item.stunum})
	
	    </foreach>
	
	</insert>
  
  <!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
  <resultMap type="ssm.model.Student" id="StudentResultMap">
        <result column="StuId" jdbcType="INTEGER" property="stuid" />
        <result column="StuPwd" jdbcType="VARCHAR" property="stupwd" />
	    <result column="StuName" jdbcType="VARCHAR" property="stuname" />
	    <result column="StuSex" jdbcType="VARCHAR" property="stusex" />
	    <result column="ClassId" jdbcType="INTEGER" property="classid" />
	    <result column="StuMail" jdbcType="VARCHAR" property="stumail" />
	    <result column="StuNum" jdbcType="INTEGER" property="stunum" />      
        <association property="clas" javaType="ssm.model.Class">
            <id property="classid" column="ClassId"/>
            <result property="claname" column="ClaName"/>
       </association> 
    </resultMap>
  <!-- <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    StuId, StuPwd, StuName, StuSex, ClassId, StuMail, StuNum
  </sql>
  <select id="selectByExample" parameterType="ssm.model.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Student">
    insert into student (StuId, StuPwd, StuName, 
      StuSex, ClassId, StuMail, 
      StuNum)
    values (#{stuid,jdbcType=INTEGER}, #{stupwd,jdbcType=VARCHAR}, #{stuname,jdbcType=VARCHAR}, 
      #{stusex,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER}, #{stumail,jdbcType=VARCHAR}, 
      #{stunum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        StuId,
      </if>
      <if test="stupwd != null">
        StuPwd,
      </if>
      <if test="stuname != null">
        StuName,
      </if>
      <if test="stusex != null">
        StuSex,
      </if>
      <if test="classid != null">
        ClassId,
      </if>
      <if test="stumail != null">
        StuMail,
      </if>
      <if test="stunum != null">
        StuNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="stupwd != null">
        #{stupwd,jdbcType=VARCHAR},
      </if>
      <if test="stuname != null">
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stusex != null">
        #{stusex,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="stumail != null">
        #{stumail,jdbcType=VARCHAR},
      </if>
      <if test="stunum != null">
        #{stunum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuid != null">
        StuId = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.stupwd != null">
        StuPwd = #{record.stupwd,jdbcType=VARCHAR},
      </if>
      <if test="record.stuname != null">
        StuName = #{record.stuname,jdbcType=VARCHAR},
      </if>
      <if test="record.stusex != null">
        StuSex = #{record.stusex,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null">
        ClassId = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.stumail != null">
        StuMail = #{record.stumail,jdbcType=VARCHAR},
      </if>
      <if test="record.stunum != null">
        StuNum = #{record.stunum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set StuId = #{record.stuid,jdbcType=INTEGER},
      StuPwd = #{record.stupwd,jdbcType=VARCHAR},
      StuName = #{record.stuname,jdbcType=VARCHAR},
      StuSex = #{record.stusex,jdbcType=VARCHAR},
      ClassId = #{record.classid,jdbcType=INTEGER},
      StuMail = #{record.stumail,jdbcType=VARCHAR},
      StuNum = #{record.stunum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="ssm.model.Student">
    <result column="StuId" jdbcType="INTEGER" property="stuid" />
    <result column="StuPwd" jdbcType="VARCHAR" property="stupwd" />
    <result column="StuName" jdbcType="VARCHAR" property="stuname" />
    <result column="StuSex" jdbcType="VARCHAR" property="stusex" />
    <result column="ClassId" jdbcType="INTEGER" property="classid" />
    <result column="StuMail" jdbcType="VARCHAR" property="stumail" />
    <result column="StuNum" jdbcType="INTEGER" property="stunum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    StuId, StuPwd, StuName, StuSex, ClassId, StuMail, StuNum
  </sql>
  <select id="selectByExample" parameterType="ssm.model.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Student">
    insert into student (StuId, StuPwd, StuName, 
      StuSex, ClassId, StuMail, 
      StuNum)
    values (#{stuid,jdbcType=INTEGER}, #{stupwd,jdbcType=VARCHAR}, #{stuname,jdbcType=VARCHAR}, 
      #{stusex,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER}, #{stumail,jdbcType=VARCHAR}, 
      #{stunum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        StuId,
      </if>
      <if test="stupwd != null">
        StuPwd,
      </if>
      <if test="stuname != null">
        StuName,
      </if>
      <if test="stusex != null">
        StuSex,
      </if>
      <if test="classid != null">
        ClassId,
      </if>
      <if test="stumail != null">
        StuMail,
      </if>
      <if test="stunum != null">
        StuNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="stupwd != null">
        #{stupwd,jdbcType=VARCHAR},
      </if>
      <if test="stuname != null">
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stusex != null">
        #{stusex,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="stumail != null">
        #{stumail,jdbcType=VARCHAR},
      </if>
      <if test="stunum != null">
        #{stunum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuid != null">
        StuId = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.stupwd != null">
        StuPwd = #{record.stupwd,jdbcType=VARCHAR},
      </if>
      <if test="record.stuname != null">
        StuName = #{record.stuname,jdbcType=VARCHAR},
      </if>
      <if test="record.stusex != null">
        StuSex = #{record.stusex,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null">
        ClassId = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.stumail != null">
        StuMail = #{record.stumail,jdbcType=VARCHAR},
      </if>
      <if test="record.stunum != null">
        StuNum = #{record.stunum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set StuId = #{record.stuid,jdbcType=INTEGER},
      StuPwd = #{record.stupwd,jdbcType=VARCHAR},
      StuName = #{record.stuname,jdbcType=VARCHAR},
      StuSex = #{record.stusex,jdbcType=VARCHAR},
      ClassId = #{record.classid,jdbcType=INTEGER},
      StuMail = #{record.stumail,jdbcType=VARCHAR},
      StuNum = #{record.stunum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="ssm.model.Student">
    <result column="stuId" jdbcType="VARCHAR" property="stuid" />
    <result column="stuNam" jdbcType="VARCHAR" property="stunam" />
    <result column="stuPwd" jdbcType="VARCHAR" property="stupwd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stuId, stuNam, stuPwd
  </sql>
  <select id="selectByExample" parameterType="ssm.model.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Student">
    insert into student (stuId, stuNam, stuPwd
      )
    values (#{stuid,jdbcType=VARCHAR}, #{stunam,jdbcType=VARCHAR}, #{stupwd,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        stuId,
      </if>
      <if test="stunam != null">
        stuNam,
      </if>
      <if test="stupwd != null">
        stuPwd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="stunam != null">
        #{stunam,jdbcType=VARCHAR},
      </if>
      <if test="stupwd != null">
        #{stupwd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuid != null">
        stuId = #{record.stuid,jdbcType=VARCHAR},
      </if>
      <if test="record.stunam != null">
        stuNam = #{record.stunam,jdbcType=VARCHAR},
      </if>
      <if test="record.stupwd != null">
        stuPwd = #{record.stupwd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set stuId = #{record.stuid,jdbcType=VARCHAR},
      stuNam = #{record.stunam,jdbcType=VARCHAR},
      stuPwd = #{record.stupwd,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update> -->
</mapper>