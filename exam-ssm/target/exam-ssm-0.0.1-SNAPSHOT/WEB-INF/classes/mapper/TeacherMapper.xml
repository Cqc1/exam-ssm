<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="ssm.model.Teacher">
    <result column="TeaId" jdbcType="INTEGER" property="teaid" />
    <result column="TeaName" jdbcType="VARCHAR" property="teaname" />
    <result column="TeaPwd" jdbcType="VARCHAR" property="teapwd" />
    <result column="TeaSex" jdbcType="VARCHAR" property="teasex" />
    <result column="YuId" jdbcType="INTEGER" property="yuid" />
    <result column="TeaMail" jdbcType="VARCHAR" property="teamail" />
    <result column="TeaNum" jdbcType="INTEGER" property="teanum" />
  </resultMap>
  <!-- 自定义方法 -->
  <select id="getTeacher" resultType="teacher"> 
      select * from teacher where TeaId=#{teaid} and TeaPwd=#{teapwd}
  </select>
  
   <select id="getById" resultMap="TeacherResultMap">
      select * from teacher,yuanxi where teacher.YuId=yuanxi.YuId and TeaId=#{teaid}
  </select>
  
  <select id="findAll" resultMap="TeacherResultMap">
      select * from teacher,yuanxi where teacher.YuId=yuanxi.YuId
  </select>
  
  <select id="queryfind" resultMap="TeacherResultMap">
      select * from teacher,yuanxi
      <where>
            <if test="#{query}!=null">
            ${type} like CONCAT('%',#{query},'%')
            </if>                    
      </where>
      and teacher.YuId=yuanxi.YuId 
  </select>
  
  <delete id="deleteByid">
      delete from teacher where TeaId=#{teaid}
  </delete>
  
  <update id="updateByid" parameterType="teacher">
      update teacher set TeaId=#{teaid},TeaName=#{teaname},TeaPwd=#{teapwd},TeaSex=#{teasex},YuId=#{yuid},TeaMail=#{teamail},TeaNum=#{teanum} where TeaId=#{teaid} 
  </update>
  
  <update id="updateByPass" parameterType="teacher">
      update teacher set TeaPwd=#{password} where TeaId=#{teaid} 
  </update>
  
  <insert id="addUser" parameterType="teacher">
      insert into teacher values(#{teaid},#{teaname},#{teapwd},#{teasex},#{yuid},#{teamail},#{teanum}) 
  </insert>
  
  <select id="getByYuid" resultMap="TeacherResultMap">
      select * from teacher,yuanxi where teacher.YuId=#{yuid} and teacher.YuId=yuanxi.YuId
  </select>
  
  <!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
  <resultMap type="ssm.model.Teacher" id="TeacherResultMap">
        <result column="TeaId" jdbcType="INTEGER" property="teaid" />
        <result column="TeaName" jdbcType="VARCHAR" property="teaname" />
	    <result column="TeaPwd" jdbcType="VARCHAR" property="teapwd" />
	    <result column="TeaSex" jdbcType="VARCHAR" property="teasex" />
	    <result column="YuId" jdbcType="INTEGER" property="yuid" />
	    <result column="TeaMail" jdbcType="VARCHAR" property="teamail" />
	    <result column="TeaNum" jdbcType="INTEGER" property="teanum" />      
        <association property="yuanxi" javaType="ssm.model.Yuanxi">
            <id property="yuid" column="YuId"/>
            <result property="yunam" column="YuNam"/>
       </association> 
    </resultMap>
  
  <!-- <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TeaId, TeaName, TeaPwd, TeaSex, YuId, TeaMail, TeaNum
  </sql>
  <select id="selectByExample" parameterType="ssm.model.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Teacher">
    insert into teacher (TeaId, TeaName, TeaPwd, 
      TeaSex, YuId, TeaMail, 
      TeaNum)
    values (#{teaid,jdbcType=INTEGER}, #{teaname,jdbcType=VARCHAR}, #{teapwd,jdbcType=VARCHAR}, 
      #{teasex,jdbcType=VARCHAR}, #{yuid,jdbcType=INTEGER}, #{teamail,jdbcType=VARCHAR}, 
      #{teanum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teaid != null">
        TeaId,
      </if>
      <if test="teaname != null">
        TeaName,
      </if>
      <if test="teapwd != null">
        TeaPwd,
      </if>
      <if test="teasex != null">
        TeaSex,
      </if>
      <if test="yuid != null">
        YuId,
      </if>
      <if test="teamail != null">
        TeaMail,
      </if>
      <if test="teanum != null">
        TeaNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teaid != null">
        #{teaid,jdbcType=INTEGER},
      </if>
      <if test="teaname != null">
        #{teaname,jdbcType=VARCHAR},
      </if>
      <if test="teapwd != null">
        #{teapwd,jdbcType=VARCHAR},
      </if>
      <if test="teasex != null">
        #{teasex,jdbcType=VARCHAR},
      </if>
      <if test="yuid != null">
        #{yuid,jdbcType=INTEGER},
      </if>
      <if test="teamail != null">
        #{teamail,jdbcType=VARCHAR},
      </if>
      <if test="teanum != null">
        #{teanum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.teaid != null">
        TeaId = #{record.teaid,jdbcType=INTEGER},
      </if>
      <if test="record.teaname != null">
        TeaName = #{record.teaname,jdbcType=VARCHAR},
      </if>
      <if test="record.teapwd != null">
        TeaPwd = #{record.teapwd,jdbcType=VARCHAR},
      </if>
      <if test="record.teasex != null">
        TeaSex = #{record.teasex,jdbcType=VARCHAR},
      </if>
      <if test="record.yuid != null">
        YuId = #{record.yuid,jdbcType=INTEGER},
      </if>
      <if test="record.teamail != null">
        TeaMail = #{record.teamail,jdbcType=VARCHAR},
      </if>
      <if test="record.teanum != null">
        TeaNum = #{record.teanum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set TeaId = #{record.teaid,jdbcType=INTEGER},
      TeaName = #{record.teaname,jdbcType=VARCHAR},
      TeaPwd = #{record.teapwd,jdbcType=VARCHAR},
      TeaSex = #{record.teasex,jdbcType=VARCHAR},
      YuId = #{record.yuid,jdbcType=INTEGER},
      TeaMail = #{record.teamail,jdbcType=VARCHAR},
      TeaNum = #{record.teanum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="ssm.model.Teacher">
    <result column="TeaId" jdbcType="INTEGER" property="teaid" />
    <result column="TeaName" jdbcType="VARCHAR" property="teaname" />
    <result column="TeaPwd" jdbcType="VARCHAR" property="teapwd" />
    <result column="TeaSex" jdbcType="VARCHAR" property="teasex" />
    <result column="YuId" jdbcType="INTEGER" property="yuid" />
    <result column="TeaMail" jdbcType="VARCHAR" property="teamail" />
    <result column="TeaNum" jdbcType="INTEGER" property="teanum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TeaId, TeaName, TeaPwd, TeaSex, YuId, TeaMail, TeaNum
  </sql>
  <select id="selectByExample" parameterType="ssm.model.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Teacher">
    insert into teacher (TeaId, TeaName, TeaPwd, 
      TeaSex, YuId, TeaMail, 
      TeaNum)
    values (#{teaid,jdbcType=INTEGER}, #{teaname,jdbcType=VARCHAR}, #{teapwd,jdbcType=VARCHAR}, 
      #{teasex,jdbcType=VARCHAR}, #{yuid,jdbcType=INTEGER}, #{teamail,jdbcType=VARCHAR}, 
      #{teanum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teaid != null">
        TeaId,
      </if>
      <if test="teaname != null">
        TeaName,
      </if>
      <if test="teapwd != null">
        TeaPwd,
      </if>
      <if test="teasex != null">
        TeaSex,
      </if>
      <if test="yuid != null">
        YuId,
      </if>
      <if test="teamail != null">
        TeaMail,
      </if>
      <if test="teanum != null">
        TeaNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teaid != null">
        #{teaid,jdbcType=INTEGER},
      </if>
      <if test="teaname != null">
        #{teaname,jdbcType=VARCHAR},
      </if>
      <if test="teapwd != null">
        #{teapwd,jdbcType=VARCHAR},
      </if>
      <if test="teasex != null">
        #{teasex,jdbcType=VARCHAR},
      </if>
      <if test="yuid != null">
        #{yuid,jdbcType=INTEGER},
      </if>
      <if test="teamail != null">
        #{teamail,jdbcType=VARCHAR},
      </if>
      <if test="teanum != null">
        #{teanum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.teaid != null">
        TeaId = #{record.teaid,jdbcType=INTEGER},
      </if>
      <if test="record.teaname != null">
        TeaName = #{record.teaname,jdbcType=VARCHAR},
      </if>
      <if test="record.teapwd != null">
        TeaPwd = #{record.teapwd,jdbcType=VARCHAR},
      </if>
      <if test="record.teasex != null">
        TeaSex = #{record.teasex,jdbcType=VARCHAR},
      </if>
      <if test="record.yuid != null">
        YuId = #{record.yuid,jdbcType=INTEGER},
      </if>
      <if test="record.teamail != null">
        TeaMail = #{record.teamail,jdbcType=VARCHAR},
      </if>
      <if test="record.teanum != null">
        TeaNum = #{record.teanum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set TeaId = #{record.teaid,jdbcType=INTEGER},
      TeaName = #{record.teaname,jdbcType=VARCHAR},
      TeaPwd = #{record.teapwd,jdbcType=VARCHAR},
      TeaSex = #{record.teasex,jdbcType=VARCHAR},
      YuId = #{record.yuid,jdbcType=INTEGER},
      TeaMail = #{record.teamail,jdbcType=VARCHAR},
      TeaNum = #{record.teanum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="ssm.model.Teacher">
    <result column="teaId" jdbcType="VARCHAR" property="teaid" />
    <result column="teaNam" jdbcType="VARCHAR" property="teanam" />
    <result column="teaPwd" jdbcType="VARCHAR" property="teapwd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teaId, teaNam, teaPwd
  </sql>
  <select id="selectByExample" parameterType="ssm.model.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Teacher">
    insert into teacher (teaId, teaNam, teaPwd
      )
    values (#{teaid,jdbcType=VARCHAR}, #{teanam,jdbcType=VARCHAR}, #{teapwd,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teaid != null">
        teaId,
      </if>
      <if test="teanam != null">
        teaNam,
      </if>
      <if test="teapwd != null">
        teaPwd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teaid != null">
        #{teaid,jdbcType=VARCHAR},
      </if>
      <if test="teanam != null">
        #{teanam,jdbcType=VARCHAR},
      </if>
      <if test="teapwd != null">
        #{teapwd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.teaid != null">
        teaId = #{record.teaid,jdbcType=VARCHAR},
      </if>
      <if test="record.teanam != null">
        teaNam = #{record.teanam,jdbcType=VARCHAR},
      </if>
      <if test="record.teapwd != null">
        teaPwd = #{record.teapwd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set teaId = #{record.teaid,jdbcType=VARCHAR},
      teaNam = #{record.teanam,jdbcType=VARCHAR},
      teaPwd = #{record.teapwd,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update> -->
</mapper>