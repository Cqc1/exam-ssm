<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="ssm.model.Score">
    <result column="Term" jdbcType="VARCHAR" property="term" />
    <result column="CouId" jdbcType="INTEGER" property="couid" />
    <result column="StuId" jdbcType="INTEGER" property="stuid" />
    <result column="ShijuanId" jdbcType="INTEGER" property="shijuanid" />
    <result column="Score" jdbcType="INTEGER" property="score" />
  </resultMap>
  
   <!-- 自定义方法 -->
   <select id="getById" resultMap="ScoreResultMap">
      select * from score,student,course,shijuan where 
      score.StuId=student.StuId and score.CouId=course.CouId 
      and score.ShijuanId=shijuan.ShijuanId and StuId=#{stuid}
  </select>
  
  <select id="findAll" resultMap="ScoreResultMap">
      select * from score,student,course,shijuan where 
      score.StuId=student.StuId and score.CouId=course.CouId 
      and score.ShijuanId=shijuan.ShijuanId
  </select>
  
  <select id="queryfind" resultMap="ScoreResultMap">
      select * from score,student,course,shijuan
      <where>
            <if test="#{query}!=null">
            ${type} like CONCAT('%',#{query},'%')
            </if>                    
      </where>
      and score.StuId=student.StuId and score.CouId=course.CouId 
      and score.ShijuanId=shijuan.ShijuanId
  </select>
  
  <delete id="deleteByid">
      delete from score where StuId=#{stuid}
  </delete>
  
  <update id="updateByid" parameterType="score">
      update score set Term=#{term},CouId=#{couid},StuId=#{stuid},ShijuanId=#{shijuanid},Score=#{score} where score.StuId=#{stuid} 
  </update>
  
  <insert id="addScore" parameterType="score">
      insert into score(Term,CouId,StuId,ShijuanId,Score) values(#{term},#{couid},#{stuid},#{shijuanid},#{score}) 
  </insert>
  
  <select id="selectByMore" resultMap="ScoreResultMap">
      select * from score,student,course,shijuan where
      score.StuId=#{stuid} and score.CouId=#{couid} and score.ShijuanId=#{shijuanid} and  
      score.StuId=student.StuId and score.CouId=course.CouId 
      and score.ShijuanId=shijuan.ShijuanId
  </select>
  
  <!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
  <resultMap type="ssm.model.Score" id="ScoreResultMap">
        <result column="Term" jdbcType="VARCHAR" property="term" />
	    <result column="CouId" jdbcType="INTEGER" property="couid" />
	    <result column="StuId" jdbcType="INTEGER" property="stuid" />
	    <result column="ShijuanId" jdbcType="INTEGER" property="shijuanid" />
	    <result column="Score" jdbcType="INTEGER" property="score" />         
        <association property="course" javaType="ssm.model.Course">
            <id column="CouId" jdbcType="INTEGER" property="couid" />
		    <result column="CouName" jdbcType="VARCHAR" property="couname" />
		    <result column="Credit" jdbcType="INTEGER" property="credit" />
       </association>
       <association property="student" javaType="ssm.model.Student">
            <id column="StuId" jdbcType="INTEGER" property="stuid" />
		    <result column="StuPwd" jdbcType="VARCHAR" property="stupwd" />
		    <result column="StuName" jdbcType="VARCHAR" property="stuname" />
		    <result column="StuSex" jdbcType="VARCHAR" property="stusex" />
		    <result column="ClassId" jdbcType="INTEGER" property="classid" />
		    <result column="StuMail" jdbcType="VARCHAR" property="stumail" />
		    <result column="StuNum" jdbcType="INTEGER" property="stunum" />
       </association> 
       <association property="shijuan" javaType="ssm.model.Shijuan">
            <id column="ShijuanId" jdbcType="INTEGER" property="shijuanid" />
		    <result column="CouId" jdbcType="INTEGER" property="couid" />
		    <result column="ExamDay" jdbcType="TIMESTAMP" property="examday" />
		    <result column="ExamTime" jdbcType="VARCHAR" property="examtime" />
		    <result column="ExamAdr" jdbcType="VARCHAR" property="examadr" />
		    <result column="ClassId" jdbcType="INTEGER" property="classid" />
		    <result column="TixinId" jdbcType="INTEGER" property="tixinid" />
		    <result column="TixinScore" jdbcType="INTEGER" property="tixinscore" />
		    <result column="ToalScore" jdbcType="INTEGER" property="toalscore" />
		    <result column="ZujuUser" jdbcType="VARCHAR" property="zujuuser" />
       </association>        
    </resultMap>
<!--   <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Term, CouId, StuId, ShijuanId, Score
  </sql>
  <select id="selectByExample" parameterType="ssm.model.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Score">
    insert into score (Term, CouId, StuId, 
      ShijuanId, Score)
    values (#{term,jdbcType=VARCHAR}, #{couid,jdbcType=INTEGER}, #{stuid,jdbcType=INTEGER}, 
      #{shijuanid,jdbcType=INTEGER}, #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="term != null">
        Term,
      </if>
      <if test="couid != null">
        CouId,
      </if>
      <if test="stuid != null">
        StuId,
      </if>
      <if test="shijuanid != null">
        ShijuanId,
      </if>
      <if test="score != null">
        Score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="couid != null">
        #{couid,jdbcType=INTEGER},
      </if>
      <if test="stuid != null">
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="shijuanid != null">
        #{shijuanid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.term != null">
        Term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.couid != null">
        CouId = #{record.couid,jdbcType=INTEGER},
      </if>
      <if test="record.stuid != null">
        StuId = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.shijuanid != null">
        ShijuanId = #{record.shijuanid,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        Score = #{record.score,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set Term = #{record.term,jdbcType=VARCHAR},
      CouId = #{record.couid,jdbcType=INTEGER},
      StuId = #{record.stuid,jdbcType=INTEGER},
      ShijuanId = #{record.shijuanid,jdbcType=INTEGER},
      Score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="ssm.model.Score">
    <result column="Term" jdbcType="VARCHAR" property="term" />
    <result column="CouId" jdbcType="INTEGER" property="couid" />
    <result column="StuId" jdbcType="INTEGER" property="stuid" />
    <result column="ShijuanId" jdbcType="INTEGER" property="shijuanid" />
    <result column="Score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Term, CouId, StuId, ShijuanId, Score
  </sql>
  <select id="selectByExample" parameterType="ssm.model.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ssm.model.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.Score">
    insert into score (Term, CouId, StuId, 
      ShijuanId, Score)
    values (#{term,jdbcType=VARCHAR}, #{couid,jdbcType=INTEGER}, #{stuid,jdbcType=INTEGER}, 
      #{shijuanid,jdbcType=INTEGER}, #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="term != null">
        Term,
      </if>
      <if test="couid != null">
        CouId,
      </if>
      <if test="stuid != null">
        StuId,
      </if>
      <if test="shijuanid != null">
        ShijuanId,
      </if>
      <if test="score != null">
        Score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="couid != null">
        #{couid,jdbcType=INTEGER},
      </if>
      <if test="stuid != null">
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="shijuanid != null">
        #{shijuanid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.term != null">
        Term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.couid != null">
        CouId = #{record.couid,jdbcType=INTEGER},
      </if>
      <if test="record.stuid != null">
        StuId = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.shijuanid != null">
        ShijuanId = #{record.shijuanid,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        Score = #{record.score,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set Term = #{record.term,jdbcType=VARCHAR},
      CouId = #{record.couid,jdbcType=INTEGER},
      StuId = #{record.stuid,jdbcType=INTEGER},
      ShijuanId = #{record.shijuanid,jdbcType=INTEGER},
      Score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update> -->
</mapper>